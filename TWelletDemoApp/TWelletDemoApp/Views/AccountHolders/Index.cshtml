
@using X.PagedList;
@model IPagedList<TWelletDemoApp.Models.AccountHolder>





@{
    ViewData["Title"] = "Account Holders";
}

<h2>@ViewData["Title"]</h2>

<style>
    .table-nowrap td {
        white-space: nowrap; /* Prevents text from wrapping */
        overflow: hidden; /* Hides overflowed text */
        text-overflow: ellipsis; /* Adds ellipsis (...) if text is too long */
    }

    .table thead th, .table tbody td {
        vertical-align: middle; /* Centers the content vertically */
        text-align: center; /* Centers the content horizontally */
    }

    .action-btn {
        width: 90px; /* Fixed width for all buttons */
        padding: 0.375rem 0.75rem; /* Consistent padding for small buttons */
    }
</style>

<table class="table table-striped table-bordered table-hover table-nowrap">
    <thead style="background-color: #3254a8; color: white;">
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().AccountHolderRegnNo)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().AccountHolderFullName)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().AccountHolderMobileNo)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().AccountHolderAddress)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().AccountHolderDob)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CreatedDate)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().UpdatedDate)</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.AccountHolderRegnNo)</td>
                <td>@Html.DisplayFor(modelItem => item.AccountHolderFullName)</td>
                <td>@Html.DisplayFor(modelItem => item.AccountHolderMobileNo)</td>
                <td>@Html.DisplayFor(modelItem => item.AccountHolderAddress)</td>
                <td>@Html.DisplayFor(modelItem => item.AccountHolderDob)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedDate)</td>
                <td>
                    <!-- Action buttons (Details, Edit, Delete, Approve, Reject) -->
                    <a class="btn btn-success action-btn" asp-action="Approve" asp-route-id="@item.AccountHolderId">Approve</a>
                    <a class="btn btn-warning action-btn" asp-action="Reject" asp-route-id="@item.AccountHolderId">Reject</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<ul class="pagination">
    @for (var i = 1; i <= Model.PageCount; i++)
    {
        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
            <a class="page-link" href="@Url.Action("GetAccountsRegisteredonaGivenDate", new { page = i, pageSize = Model.PageSize })">@i</a>
        </li>
    }
</ul>

